# Changelog

- 0.20.1 (2021-10-27)
    * Now permits specifying the optional 'step' parameter in the
      'generateCode' function.

- 0.20.0 (2021-10-01)
    * Adds 'generateKeyfile' and 'generateCode' functions for generating
      Arvo keyfiles and web UI access codes, respectively.

    * Various internal fixes.

- 0.19.0 (2021-05-24)
    * Adds bitcoin testnet support. (#97)

      Note two backwards-incompatible changes:

      * The 'bitcoin' branch is now replaced by 'bitcoinMainnet' and
        'bitcoinTestnet' branches.

      * The 'keys' branches now contain only 'xpub' and 'xprv' entries,
        instead of the former 'public', 'private', 'chain', and 'address'.

- 0.18.0 (2020-11-30)
    * Adds a BIP32 bitcoin branch to derived wallets. (#92)

- 0.17.4 (2019-11-07)
    * Fixes a bug in which invalid hex strings could produce valid, but
      identical, network keys. (#85)

- 0.17.3 (2019-09-09)
    * Updates 'urbit-ob' to a version with a corrected browser build.

- 0.17.2 (2019-09-09)
    * The 'browser' field was specified incorrectly [1].  This patches it up
      so that the hint for the 'urbit-key-generation' module is now the
      bundle at ./dist/index.js.

      [1]: https://github.com/defunctzombie/package-browser-field-spec

- 0.17.1 (2019-09-05)
    * A tweak to .gitignore inadvertently caused npm to ignore the browser
      build on the last version publish -- this fixes that issue.

- 0.17.0 (2019-08-29)
    * Restructures wallet metadata for easier consumption downstream.  The
      'generator' attribute now consists of the generator's name and version
      separately, in an object.

      Also adds a 'spec' attribute to metadata to indicate what wallet
      definition is being targeted.

- 0.16.1 (2019-08-07)
    * Adds patp, ship tier, and BIP32 derivation path metadata to generated
      wallets.

- 0.16.0 (2019-06-05)
    * Adds a 'generateOwnershipWallet' function that only generates the
      ownership subtree of the full HD wallet.  Compared to the full wallet,
      this shaves off about ~400ms in cases where we're only interested in the
      ownership keys.

- 0.15.0 (2019-04-30)
    * Slots out the isomorphic-webcrypto dependency in favour of js-sha256.
      Several functions that would previously return promises now return
      simple values instead.

- 0.14.0 (2019-04-05)
    * Adds "origin" ship and optional passphrase metadata to generated
      wallets.

- 0.13.0 (2019-03-20)
    * Uses an updated version of urbit-ob that corrects the bug described in
      urbit/arvo#1105.

- 0.12.1 (2019-01-12)
    * Fixes a bug in our variadic SHA-256 implementation that led to problems
      deriving network seeds when the revision number was greater than zero.

- 0.12.0 (2018-11-24)
    * Use a double application of SHA-256 when deriving network seeds using
      nonzero revisions (prevents possible length-extension attacks).

- 0.11.1 (2018-11-15)
    * Use the npm-distributed argon2-wasm dependency, rather than a specific
      commit at the Github repository.

- 0.11.0 (2018-11-14)
    * Another significant refactor to match the updated UP 8 spec.  Gets rid
      of the per-BIP32 node ship salt and only uses the ship as a salt in
      argon2.  Uses revision numbers only to salt the network keys.
    * Adds generator metadata (i.e. urbit-key-generator version info) to
      wallets.

- 0.10.1 (2018-11-11)
    * Ship the browser bundle with the latest release.

- 0.10.0 (2018-11-10)
    * Add a 'combine' function for recombining shards.

- 0.9.3 (2018-11-07)
    * Bugfix, make sure optional password is used when deriving seeds from
      BIP39 mnemonics when generating network keys.

- 0.9.2 (2018-11-05)
    * Bugfix, add missing 'const' to utility function declarations.

- 0.9.1 (2018-11-05)
    * Simplify dependencies.

- 0.9.0 (2018-11-04)
    * Change name of library to urbit-key-generation.  Decrement version to
      0.9.0.

- 3.0.2 (2018-10-31)
    * Fix incorrect address derivation bug.

- 3.0.0 (2018-10-25)
    * Fix all seeds at 256 bits.
    * Always derive BIP32 nodes according to the path m/44'/60'/0'/0/0.
    * Remove the optional 'password' salt.
    * Render and handle non-network seeds as BIP39 mnemonics.
    * Displays corresponding Ethereum addresses in derived BIP32 nodes.
    * Replaces XOR-based 2-3 sharding with concat-based 2-3 sharding.  Shards
      are also now reported in the 'shards' property of the final wallet.
    * Add an 'ownership' seed, plus slight changes to other seed type names.
    * Miscellaneous housekeeping and simplification throughout.

- 2.1.0 (2018-10-11)
    * Export 'shardPatq' and 'combinePatq' functions.
